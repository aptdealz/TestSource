import { ElementRef, OnDestroy } from '@angular/core';
import { GaEventCategoryDirective } from './ga-event-category.directive';
import { GoogleAnalyticsService } from '../services/google-analytics.service';
import { GaActionEnum } from '../enums/ga-action.enum';
import { IGoogleAnalyticsSettings } from '../interfaces/i-google-analytics-settings';
import * as i0 from "@angular/core";
export declare class GaEventDirective implements OnDestroy {
    private gaCategoryDirective;
    private gaService;
    private settings;
    private readonly el;
    constructor(gaCategoryDirective: GaEventCategoryDirective, gaService: GoogleAnalyticsService, settings: IGoogleAnalyticsSettings, el: ElementRef);
    private bindSubscription?;
    gaAction: GaActionEnum | string;
    gaLabel: string;
    label: string;
    gaValue: number;
    gaInteraction: boolean;
    gaEvent: GaActionEnum | string;
    private _gaBind;
    set gaBind(gaBind: string);
    get gaBind(): string;
    ngOnDestroy(): void;
    protected trigger(): void;
    protected throw(err: Error): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<GaEventDirective, [{ optional: true; }, null, null, null]>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<GaEventDirective, "[gaEvent]", ["gaEvent"], { "gaAction": "gaAction"; "gaLabel": "gaLabel"; "label": "label"; "gaValue": "gaValue"; "gaInteraction": "gaInteraction"; "gaEvent": "gaEvent"; "gaBind": "gaBind"; }, {}, never, never, false>;
}
