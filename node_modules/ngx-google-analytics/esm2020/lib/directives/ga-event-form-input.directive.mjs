import { Directive, Host, Optional, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "./ga-event.directive";
export class GaEventFormInputDirective {
    constructor(gaEvent) {
        this.gaEvent = gaEvent;
        this.gaBind = 'focus';
    }
    set gaBind(bind) {
        if (this.gaEvent) {
            this.gaEvent.gaBind = bind;
        }
    }
}
GaEventFormInputDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.0.2", ngImport: i0, type: GaEventFormInputDirective, deps: [{ token: i1.GaEventDirective, host: true, optional: true }], target: i0.ɵɵFactoryTarget.Directive });
GaEventFormInputDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "14.0.2", type: GaEventFormInputDirective, selector: "input[gaEvent],\n             select[gaEvent],\n             textarea[gaEvent]", inputs: { gaBind: "gaBind" }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.0.2", ngImport: i0, type: GaEventFormInputDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: `input[gaEvent],
             select[gaEvent],
             textarea[gaEvent]`
                }]
        }], ctorParameters: function () { return [{ type: i1.GaEventDirective, decorators: [{
                    type: Host
                }, {
                    type: Optional
                }] }]; }, propDecorators: { gaBind: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2EtZXZlbnQtZm9ybS1pbnB1dC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtZ29vZ2xlLWFuYWx5dGljcy9zcmMvbGliL2RpcmVjdGl2ZXMvZ2EtZXZlbnQtZm9ybS1pbnB1dC5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQzs7O0FBUWpFLE1BQU0sT0FBTyx5QkFBeUI7SUFFcEMsWUFDZ0MsT0FBeUI7UUFBekIsWUFBTyxHQUFQLE9BQU8sQ0FBa0I7UUFFdkQsSUFBSSxDQUFDLE1BQU0sR0FBRyxPQUFPLENBQUM7SUFDeEIsQ0FBQztJQUVELElBQWEsTUFBTSxDQUFDLElBQVk7UUFDOUIsSUFBSSxJQUFJLENBQUMsT0FBTyxFQUFFO1lBQ2hCLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztTQUM1QjtJQUNILENBQUM7O3NIQVpVLHlCQUF5QjswR0FBekIseUJBQXlCOzJGQUF6Qix5QkFBeUI7a0JBTHJDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFOzsrQkFFbUI7aUJBQzlCOzswQkFJSSxJQUFJOzswQkFBSSxRQUFROzRDQUtOLE1BQU07c0JBQWxCLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEhvc3QsIE9wdGlvbmFsLCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgR2FFdmVudERpcmVjdGl2ZSB9IGZyb20gJy4vZ2EtZXZlbnQuZGlyZWN0aXZlJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiBgaW5wdXRbZ2FFdmVudF0sXG4gICAgICAgICAgICAgc2VsZWN0W2dhRXZlbnRdLFxuICAgICAgICAgICAgIHRleHRhcmVhW2dhRXZlbnRdYFxufSlcbmV4cG9ydCBjbGFzcyBHYUV2ZW50Rm9ybUlucHV0RGlyZWN0aXZlIHtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBASG9zdCgpIEBPcHRpb25hbCgpIHByb3RlY3RlZCBnYUV2ZW50OiBHYUV2ZW50RGlyZWN0aXZlXG4gICkge1xuICAgIHRoaXMuZ2FCaW5kID0gJ2ZvY3VzJztcbiAgfVxuXG4gIEBJbnB1dCgpIHNldCBnYUJpbmQoYmluZDogc3RyaW5nKSB7XG4gICAgaWYgKHRoaXMuZ2FFdmVudCkge1xuICAgICAgdGhpcy5nYUV2ZW50LmdhQmluZCA9IGJpbmQ7XG4gICAgfVxuICB9XG5cbn1cbiJdfQ==